name: Release

on:
  workflow_dispatch:

jobs:
  submit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.17
      - name: Install dependencies
        run: bun install
      - name: Zip extensions
        run: |
          bun run zip:all
      - name: Get latest release
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            if (releases.length === 0) {
              core.setFailed('No releases found');
              return;
            }

            const latestRelease = releases[0];
            core.setOutput('upload_url', latestRelease.upload_url);
            core.setOutput('release_id', latestRelease.id);
            console.log(`Latest release: ${latestRelease.tag_name}`);

      - name: Upload ZIP files
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const outputDir = '.output';

            if (!fs.existsSync(outputDir)) {
              core.setFailed('.output directory does not exist');
              return;
            }

            const files = fs.readdirSync(outputDir)
              .filter(file => file.endsWith('.zip'))
              .map(file => path.join(outputDir, file));

            if (files.length === 0) {
              console.log('No ZIP files found in .output directory');
              return;
            }

            console.log(`Found ${files.length} ZIP files to upload`);

            for (const filePath of files) {
              const fileName = path.basename(filePath);
              const fileContent = fs.readFileSync(filePath);

              try {
                await github.rest.repos.uploadReleaseAsset({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: '${{ steps.get_release.outputs.release_id }}',
                  name: fileName,
                  data: fileContent,
                });
                console.log(`✅ Uploaded: ${fileName}`);
              } catch (error) {
                console.log(`❌ Failed to upload ${fileName}: ${error.message}`);
              }
            }

      # - name: Submit to stores
      #   run: |
      #     pnpm wxt submit \
      #       --chrome-zip .output/*-chrome.zip \
      #       --firefox-zip .output/*-firefox.zip --firefox-sources-zip .output/*-sources.zip
      #   env:
      #     CHROME_EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
      #     CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
      #     CHROME_CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
      #     CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
      #     FIREFOX_EXTENSION_ID: ${{ secrets.FIREFOX_EXTENSION_ID }}
      #     FIREFOX_JWT_ISSUER: ${{ secrets.FIREFOX_JWT_ISSUER }}
      #     FIREFOX_JWT_SECRET: ${{ secrets.FIREFOX_JWT_SECRET }}

permissions:
  contents: write